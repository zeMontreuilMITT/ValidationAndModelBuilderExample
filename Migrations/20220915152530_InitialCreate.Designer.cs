// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ValidationAndModelBuilder.Data;

#nullable disable

namespace ValidationAndModelBuilder.Migrations
{
    [DbContext(typeof(ValidationAndModelBuilderContext))]
    [Migration("20220915152530_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ValidationAndModelBuilder.Models.Course", b =>
                {
                    b.Property<int>("CourseNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseNumber"), 1L, 1);

                    b.Property<int?>("AssistingStaffNumber")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<int?>("TeachingStaffNumber")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseNumber");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("ValidationAndModelBuilder.Models.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("StudentNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseNumber");

                    b.HasIndex("StudentNumber");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("ValidationAndModelBuilder.Models.Staff", b =>
                {
                    b.Property<int>("StaffNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffNumber"), 1L, 1);

                    b.Property<int?>("AssistingCourseNumber")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobTitle")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Salary")
                        .HasColumnType("float");

                    b.Property<int?>("TeachingCourseNumber")
                        .HasColumnType("int");

                    b.HasKey("StaffNumber");

                    b.HasIndex("AssistingCourseNumber")
                        .IsUnique()
                        .HasFilter("[AssistingCourseNumber] IS NOT NULL");

                    b.HasIndex("TeachingCourseNumber")
                        .IsUnique()
                        .HasFilter("[TeachingCourseNumber] IS NOT NULL");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("ValidationAndModelBuilder.Models.Student", b =>
                {
                    b.Property<int>("StudentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentNumber"), 1L, 1);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentNumber");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("ValidationAndModelBuilder.Models.Enrollment", b =>
                {
                    b.HasOne("ValidationAndModelBuilder.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ValidationAndModelBuilder.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ValidationAndModelBuilder.Models.Staff", b =>
                {
                    b.HasOne("ValidationAndModelBuilder.Models.Course", "AssistingCourse")
                        .WithOne("AssistingStaff")
                        .HasForeignKey("ValidationAndModelBuilder.Models.Staff", "AssistingCourseNumber")
                        .HasPrincipalKey("ValidationAndModelBuilder.Models.Course", "AssistingStaffNumber");

                    b.HasOne("ValidationAndModelBuilder.Models.Course", "TeachingCourse")
                        .WithOne("TeachingStaff")
                        .HasForeignKey("ValidationAndModelBuilder.Models.Staff", "TeachingCourseNumber")
                        .HasPrincipalKey("ValidationAndModelBuilder.Models.Course", "TeachingStaffNumber");

                    b.Navigation("AssistingCourse");

                    b.Navigation("TeachingCourse");
                });

            modelBuilder.Entity("ValidationAndModelBuilder.Models.Course", b =>
                {
                    b.Navigation("AssistingStaff");

                    b.Navigation("Enrollments");

                    b.Navigation("TeachingStaff");
                });

            modelBuilder.Entity("ValidationAndModelBuilder.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
